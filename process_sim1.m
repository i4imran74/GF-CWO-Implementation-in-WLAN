% Process data generated by sim1.m (different network size)
clc
clear
format long
z=1.960;    % 95% confidence interval % z=2.576;    % 99% confidence interval
z2 = 0.5;  % confidence interval mark length
for simID=[1:3]
    for RunNumOfTimes=[1:90]
    log_file = ['log_crosslayer_' num2str(RunNumOfTimes) num2str(simID)];
    ntopo = 1;
    nsize = 5;   %%%
    itraffic = 5;
    interval=5;
    ColRatio=[];
    successrate = [];
    responsetime = [];
    responsetimez = [];
    hopcount = [];
    hopcountz = [];
    throughput=[];   %%--kabeer
    energy=[]; %%--kabeer
    JanInd=[]; %%--kabeer
    rreqrrep = [];
    for isize = 10:interval:(10+10*(nsize-1))



        n = isize;
        fid = fopen([log_file, num2str(n)], 'r');
        if fid == -1, error('Cannot open log file'); end
        a = fscanf(fid, '%d %d %g %d %d %d %d %d %f \n', [9, inf]); %kabeer
        fclose(fid);
        aT=a';

        a=a(1:6,1:end);
        a = sortrows(a', [1 2 3]);
        b = [];
        j = 0;
        for i = 1:(size(a, 1)-1)
            if sum(a(i, [1 2 5 6])==a(i+1, [1 2 5 6]))==4 & a(i, 4)==0
                % got reply
                ttime = a(i+1, 3) - a(i, 3);
                thop = a(i+1, 4);
                j = j + 1;
                b(j, :) = [a(i, 1) a(i, 2) ttime thop];
                i = i + 1;
            end
        end

        k = n/nsize;
        successrate(k) = j/(itraffic*ntopo);

        if isempty(b)
            responsetime(k) = 0;
            responsetimez(k) = 0;
            hopcount(k) = 0;
            hopcountz(k) = 0;
        else
            responsetime(k) = mean(b(:, 3)); %%-- mean of transmission time
            responsetimez(k) = z*std(b(:, 3), 1, 1)/sqrt(j);
            hopcount(k) = mean(b(:, 4));
            hopcountz(k) = z*std(b(:, 4), 1, 1)/sqrt(j);
        end

        %Calculate statistics for node (Packet send and received, energy)
        PsPrEn=aT(:,[1 7 8 9]); %kabeer
        PsPrEnTable=table(PsPrEn(:,1),PsPrEn(:,2),PsPrEn(:,3),PsPrEn(:,4));
        %varfun create table of five columns and Remove second column of count
        PsPrEnTable=varfun(@sum,PsPrEnTable,'GroupingVariables','Var1');
        PsPrEn=table2array(PsPrEnTable);
        PsPrEn=[PsPrEn(:,3),PsPrEn(:,4),PsPrEn(:,5)];

        %Throughput and energy Calculation--kabeer
        if isempty(PsPrEn)
            throughput(k)=0;   %%--kabeer
            energy(k)=0;
            ColRatio(k)=0;
        else
            throughput(k)=(sum(PsPrEn(:,2))/sum(PsPrEn(:,1)));   %total throughput (packet recevied/total packet send) 
            energy(k)=sum(PsPrEn(:,3))/100; %sum of energy consumumed 
            ColRatio(k)=(sum(PsPrEn(:,1))-sum(PsPrEn(:,2)))/((sum(PsPrEn(:,1))-sum(PsPrEn(:,2)))+sum(PsPrEn(:,2)));
        end
        %--
        %Fairness calculation Calculation--kabeer
        if isempty(PsPrEn)
            JanInd(k)=0;   %%--kabeer
        else
            NumOfJIndex=(sum(PsPrEn(:,2)./(PsPrEn(:,1)+0.00000000000001))).^2; %Add smallest value and sum and sqare of individual throughput
            DeNumOfJIndex=n*sum((PsPrEn(:,2)./(PsPrEn(:,1)+0.00000000000001)).^2);
            JanInd(k)=NumOfJIndex/DeNumOfJIndex;  %Fairness Index
        end
        %--

        fid = fopen([log_file, num2str(n) '_rreqrrep'], 'r');
        if fid == -1, error('Cannot open log file'); end
        a = fscanf(fid, '%d %d %d %d %d %d %d %d %d %d %d %d %d %d \n', [14, inf]);
        fclose(fid);
        a = sortrows(a', [1]);
        rreqrrep(k, :) = mean(a(:, 2:14), 1);
    end 
    %Take Sum of simulation Results
    if RunNumOfTimes==1
        sumColRatio=ColRatio;
        sumresponsetime=responsetime;
        sumthroughput=throughput;
        sumenergy=energy;
        sumJanInd=JanInd;
        sumPacketLossRatio=(1-throughput);
    else
        sumColRatio=sumColRatio+ColRatio;
        sumresponsetime=sumresponsetime+responsetime;
        sumthroughput=sumthroughput+throughput;
        sumenergy=sumenergy+energy;
        sumJanInd=sumJanInd+JanInd;
        sumPacketLossRatio=sumPacketLossRatio+(1-throughput);
    end
    end %number of simulation times
avgColRatio=sumColRatio./RunNumOfTimes;
avgresponsetime=sumresponsetime./RunNumOfTimes;
avgthroughput=sumthroughput./RunNumOfTimes;
avgenergy=sumenergy./RunNumOfTimes;
avgJanInd=sumJanInd./RunNumOfTimes;
avgPacketLossRatio=sumPacketLossRatio./RunNumOfTimes;


colordef white

figure(1);
hold on;
set(gca,'Box','on');
if simID==1 %for BEB
    p = polyfit(5:interval:nsize*10, avgColRatio/simID,3);
    avgColRatio1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgColRatio1, 'bo-', 'LineWidth', 2, 'MarkerFaceColor', 'b', 'MarkerSize', 5);
elseif simID==2 %for fuzzy
    p = polyfit(5:interval:nsize*10, avgColRatio/simID,3);
    avgColRatio1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgColRatio1, 'rx-', 'LineWidth', 2, 'MarkerFaceColor', 'r', 'MarkerSize', 5);
elseif simID==3 %for fuzzy-GA
    p = polyfit(5:interval:nsize*10, avgColRatio/simID,3);
    avgColRatio1 = polyval(p,5:interval:nsize*10);    
    PT = plot(5:interval:nsize*10, avgColRatio1, 'g+-', 'LineWidth', 2, 'MarkerFaceColor', 'g', 'MarkerSize', 5);
end
   
Xla = xlabel('Number of Nodes');
set(Xla,'FontSize', 12);
Yla = ylabel('Collion Rate ');
set(Yla,'FontSize', 12);
legend('BEB','CS-SCW','GF-CWO');
grid on
% % for x=1:nsize
% %     i = 10+10*(x-1);
% %     line([i, i], [responsetime(x)-responsetimez(x), responsetime(x)+responsetimez(x)], 'LineWidth', 0.5, 'Color', 'k', 'LineStyle', '-');
% %     line([i-z2, i+z2], [responsetime(x)-responsetimez(x), responsetime(x)-responsetimez(x)], 'LineWidth', 1, 'Color', 'k');
% %     line([i-z2, i+z2], [responsetime(x)+responsetimez(x), responsetime(x)+responsetimez(x)], 'LineWidth', 1, 'Color', 'k');
% % end



figure(2);
hold on;
set(gca,'Box','on');
if simID==1 %for BEB
    p = polyfit(5:interval:nsize*10, avgresponsetime,3);
    avgresponsetime1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgresponsetime1, 'bo-', 'LineWidth', 2, 'MarkerFaceColor', 'b', 'MarkerSize', 5);
elseif simID==2 %for fuzzy
    p = polyfit(5:interval:nsize*10, avgresponsetime,3);
    avgresponsetime1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgresponsetime1, 'rx-', 'LineWidth', 2, 'MarkerFaceColor', 'r', 'MarkerSize', 5);
elseif simID==3 %for fuzzy-GA
    p = polyfit(5:interval:nsize*10, avgresponsetime,3);
    avgresponsetime1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgresponsetime1, 'g+-', 'LineWidth', 2, 'MarkerFaceColor', 'g', 'MarkerSize', 5);    
end
Xla = xlabel('Number of Nodes');
set(Xla,'FontSize', 12);
Yla = ylabel('Delay (sec.)');
set(Yla,'FontSize', 12);
legend('BEB','CS-SCW','GF-CWO');
grid on
% % for x=1:nsize
% %     i = 10+10*(x-1);
% %     line([i, i], [responsetime(x)-responsetimez(x), responsetime(x)+responsetimez(x)], 'LineWidth', 0.5, 'Color', 'k', 'LineStyle', '-');
% %     line([i-z2, i+z2], [responsetime(x)-responsetimez(x), responsetime(x)-responsetimez(x)], 'LineWidth', 1, 'Color', 'k');
% %     line([i-z2, i+z2], [responsetime(x)+responsetimez(x), responsetime(x)+responsetimez(x)], 'LineWidth', 1, 'Color', 'k');
% % end



figure(3);
hold on;
set(gca,'Box','on');
if simID==1 %for BEB
    p = polyfit(5:interval:nsize*10, avgthroughput,3);
    avgthroughput1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgthroughput1, 'bo-', 'LineWidth', 2, 'MarkerFaceColor', 'b', 'MarkerSize', 5);
elseif simID==2 %for fuzzy
    p = polyfit(5:interval:nsize*10, avgthroughput,3);
    avgthroughput1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgthroughput1, 'rx-', 'LineWidth', 2, 'MarkerFaceColor', 'r', 'MarkerSize', 5);
elseif simID==3 %for fuzzy-GA
    p = polyfit(5:interval:nsize*10, avgthroughput,3);
    avgthroughput1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgthroughput1, 'g+-', 'LineWidth', 2, 'MarkerFaceColor', 'g', 'MarkerSize', 5);
end

Xla = xlabel('Number of Nodes');
set(Xla,'FontSize', 12);
Yla = ylabel('Success Ratio');
set(Yla,'FontSize', 12);
legend('BEB','CS-SCW','GF-CWO');
grid on
% % for x=1:nsize
% %     i = 10+10*(x-1);
% %     line([i, i], [hopcount(x)-hopcountz(x), hopcount(x)+hopcountz(x)], 'LineWidth', 0.5, 'Color', 'k', 'LineStyle', '-');
% %     line([i-z2, i+z2], [hopcount(x)-hopcountz(x), hopcount(x)-hopcountz(x)], 'LineWidth', 1, 'Color', 'k');
% %     line([i-z2, i+z2], [hopcount(x)+hopcountz(x), hopcount(x)+hopcountz(x)], 'LineWidth', 1, 'Color', 'k');
% % end

figure(4);
hold on;
set(gca,'Box','on');
if simID==1 %for BEB
    p = polyfit(5:interval:nsize*10, avgenergy,3);
    avgenergy1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgenergy1, 'bo-', 'LineWidth', 2, 'MarkerFaceColor', 'b', 'MarkerSize', 5);
elseif simID==2 %for fuzzy
    p = polyfit(5:interval:nsize*10, avgenergy,3);
    avgenergy1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgenergy1, 'rx-', 'LineWidth', 2, 'MarkerFaceColor', 'r', 'MarkerSize', 5);
elseif simID==3 %for fuzzy-GA
    p = polyfit(5:interval:nsize*10, avgenergy,3);
    avgenergy1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgenergy1, 'g+-', 'LineWidth', 2, 'MarkerFaceColor', 'g', 'MarkerSize', 5);
end

Xla = xlabel('Number of Nodes');
set(Xla,'FontSize', 12);
Yla = ylabel('Energy Consumption(J)');
set(Yla,'FontSize', 12);
legend('BEB','CS-SCW','GF-CWO');
grid on
% % for x=1:nsize
% %     i = 10+10*(x-1);
% %     line([i, i], [hopcount(x)-hopcountz(x), hopcount(x)+hopcountz(x)], 'LineWidth', 0.5, 'Color', 'k', 'LineStyle', '-');
% %     line([i-z2, i+z2], [hopcount(x)-hopcountz(x), hopcount(x)-hopcountz(x)], 'LineWidth', 1, 'Color', 'k');
% %     line([i-z2, i+z2], [hopcount(x)+hopcountz(x), hopcount(x)+hopcountz(x)], 'LineWidth', 1, 'Color', 'k');
% % end

figure(5);
hold on;
set(gca,'Box','on');
if simID==1 %for BEB
    p = polyfit(5:interval:nsize*10, avgJanInd*simID,3);
    avgJanInd1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10,avgJanInd1, 'bo-', 'LineWidth', 2, 'MarkerFaceColor', 'b', 'MarkerSize', 5);
elseif simID==2 %for fuzzy
    p = polyfit(5:interval:nsize*10, avgJanInd*simID ,3);
    avgJanInd1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgJanInd1, 'rx-', 'LineWidth', 2, 'MarkerFaceColor', 'r', 'MarkerSize', 5);
elseif simID==3 %for fuzzy-GA
    p = polyfit(5:interval:nsize*10, avgJanInd*simID,3);
    avgJanInd1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgJanInd1, 'g+-', 'LineWidth', 2, 'MarkerFaceColor', 'g', 'MarkerSize', 5);
end

Xla = xlabel('Number of Nodes');
set(Xla,'FontSize', 12);
Yla = ylabel('Fairness Index');
set(Yla,'FontSize', 12);
legend('BEB','CS-SCW','GF-CWO');
grid on
% % for x=1:nsize
% %     i = 10+10*(x-1);
% %     line([i, i], [hopcount(x)-hopcountz(x), hopcount(x)+hopcountz(x)], 'LineWidth', 0.5, 'Color', 'k', 'LineStyle', '-');
% %     line([i-z2, i+z2], [hopcount(x)-hopcountz(x), hopcount(x)-hopcountz(x)], 'LineWidth', 1, 'Color', 'k');
% %     line([i-z2, i+z2], [hopcount(x)+hopcountz(x), hopcount(x)+hopcountz(x)], 'LineWidth', 1, 'Color', 'k');
% % end


figure(6);
hold on;
set(gca,'Box','on');
if simID==1 %for BEB
    p = polyfit(5:interval:nsize*10, avgPacketLossRatio,3);
    avgPacketLossRatio1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10,avgPacketLossRatio1, 'bo-', 'LineWidth', 2, 'MarkerFaceColor', 'b', 'MarkerSize', 5);
elseif simID==2 %for fuzzy
    p = polyfit(5:interval:nsize*10, avgPacketLossRatio,3);
    avgPacketLossRatio1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgPacketLossRatio1, 'rx-', 'LineWidth', 2, 'MarkerFaceColor', 'r', 'MarkerSize', 5);
elseif simID==3 %for fuzzy-GA
    p = polyfit(5:interval:nsize*10, avgPacketLossRatio,3);
    avgPacketLossRatio1 = polyval(p,5:interval:nsize*10);
    PT = plot(5:interval:nsize*10, avgPacketLossRatio1, 'g+-', 'LineWidth', 2, 'MarkerFaceColor', 'g', 'MarkerSize', 5);
end

Xla = xlabel('Number of Nodes');
set(Xla,'FontSize', 12);
Yla = ylabel('Packet Loss Ratio');
set(Yla,'FontSize', 12);
legend('BEB','CS-SCW','GF-CWO');
grid on
% % for x=1:nsize
% %     i = 10+10*(x-1);
% %     line([i, i], [hopcount(x)-hopcountz(x), hopcount(x)+hopcountz(x)], 'LineWidth', 0.5, 'Color', 'k', 'LineStyle', '-');
% %     line([i-z2, i+z2], [hopcount(x)-hopcountz(x), hopcount(x)-hopcountz(x)], 'LineWidth', 1, 'Color', 'k');
% %     line([i-z2, i+z2], [hopcount(x)+hopcountz(x), hopcount(x)+hopcountz(x)], 'LineWidth', 1, 'Color', 'k');
% % end

end